import{_ as a,c as t,o as r,af as o}from"./chunks/framework.4vjtQ5Ee.js";const h=JSON.parse('{"title":"Ideas Source of Truth","description":"","frontmatter":{},"headers":[],"relativePath":"patterns/ideas-source-of-truth.md","filePath":"patterns/ideas-source-of-truth.md"}'),s={name:"patterns/ideas-source-of-truth.md"};function i(n,e,c,d,l,u){return r(),t("div",null,[...e[0]||(e[0]=[o('<h1 id="ideas-source-of-truth" tabindex="-1">Ideas Source of Truth <a class="header-anchor" href="#ideas-source-of-truth" aria-label="Permalink to &quot;Ideas Source of Truth&quot;">​</a></h1><ul><li><strong>Audience:</strong> Lane D backlog owners coordinating with Lane B storytellers</li><li><strong>Decision Anchor:</strong> <a href="https://github.com/louis-pvs/plaincraft/blob/main/templates/ideas/decision.md" target="_blank" rel="noreferrer">Template-first READMEs, Lane B narrative shift</a></li><li><strong>Owner:</strong> @lane.b</li><li><strong>TTL:</strong> Review by 2026-04-30</li><li><strong>Future Metric:</strong> Fewer than 1% of active idea cards missing <code>Lane:</code> metadata during weekly audits</li><li><strong>Recorded Media:</strong> Record later</li></ul><h2 id="why-it-matters" tabindex="-1">Why it Matters <a class="header-anchor" href="#why-it-matters" aria-label="Permalink to &quot;Why it Matters&quot;">​</a></h2><p>Plaincraft keeps work aligned by letting <code>/ideas</code> drive every downstream artifact. When cards stay accurate, automation can mint Issues, sync PR copy, feed roadmap views, and prime Playbook updates without manual rework. The folder is a contract between lanes: Lane D curates the backlog, Lane B tells the story, and Lane C automates the guardrails.</p><h2 id="worked-example" tabindex="-1">Worked Example <a class="header-anchor" href="#worked-example" aria-label="Permalink to &quot;Worked Example&quot;">​</a></h2><p><code>PB-readme-narrative-migration</code> started as a Playbook idea with a clear acceptance checklist. Lane D validated structure with the template, Lane C ran the idea automation to sync Issues and worktrees, and Lane B lifted the narrative into new Storybook/Playbook destinations once the documentation landed. Because each change looped through the idea card first, every dependent artifact updated in lock-step.</p><h2 id="constraints-to-honour" tabindex="-1">Constraints to Honour <a class="header-anchor" href="#constraints-to-honour" aria-label="Permalink to &quot;Constraints to Honour&quot;">​</a></h2><ul><li><strong>Pre-Issue hygiene:</strong> Card exists before an Issue, includes Purpose/Problem/Proposal/Acceptance, and carries accurate lane metadata.</li><li><strong>Bootstrap sync:</strong> <code>pnpm gh:worktree</code> (aka <code>scripts/ops/create-worktree-pr.mjs</code>) must update the real idea file with <code>Issue: #&lt;number&gt;</code> and <code>status: in-progress</code> so lifecycle automation can trust the source of truth.</li><li><strong>Structure:</strong> Naming prefixes (<code>U-</code>, <code>C-</code>, <code>ARCH-</code>, <code>PB-</code>, <code>B-</code>) and <code>## Sub-Issues</code> sections stay in sync so automation can map parents and children.</li><li><strong>Lifecycle:</strong> Ticket IDs, roadmap cards, and changelog slugs reuse the same prefix; closed work moves to <code>/ideas/_archive/&lt;year&gt;/</code>.</li><li><strong>Automation health:</strong> Guardrail scripts (<code>ideas-to-issues</code>, <code>create-worktree-pr</code>, <code>merge-subissue-to-parent</code>, <code>sync-ideas-checklists</code>) run in dry-run mode first and are preferred over manual edits.</li></ul><h2 id="links" tabindex="-1">Links <a class="header-anchor" href="#links" aria-label="Permalink to &quot;Links&quot;">​</a></h2><ul><li>Template README: <a href="https://github.com/louis-pvs/plaincraft/blob/main/templates/ideas/README.md" target="_blank" rel="noreferrer"><code>templates/ideas/README.md</code></a></li><li>Template USAGE: <a href="https://github.com/louis-pvs/plaincraft/blob/main/templates/ideas/USAGE.md" target="_blank" rel="noreferrer"><code>templates/ideas/USAGE.md</code></a></li><li>Storybook View: <a href="https://louis-pvs.github.io/plaincraft/storybook/?path=/docs/governance-ideas-pipeline--docs" target="_blank" rel="noreferrer">Governance / Ideas Pipeline</a></li><li>Ops Scripts: <a href="https://github.com/louis-pvs/plaincraft/blob/main/scripts/ops/ideas-to-issues.mjs" target="_blank" rel="noreferrer"><code>scripts/ops/ideas-to-issues.mjs</code></a>, <a href="https://github.com/louis-pvs/plaincraft/blob/main/scripts/ops/create-worktree-pr.mjs" target="_blank" rel="noreferrer"><code>scripts/ops/create-worktree-pr.mjs</code></a>, <a href="https://github.com/louis-pvs/plaincraft/blob/main/scripts/ops/merge-subissue-to-parent.mjs" target="_blank" rel="noreferrer"><code>scripts/ops/merge-subissue-to-parent.mjs</code></a>, <a href="https://github.com/louis-pvs/plaincraft/blob/main/scripts/ops/sync-ideas-checklists.mjs" target="_blank" rel="noreferrer"><code>scripts/ops/sync-ideas-checklists.mjs</code></a></li><li>Decision Record: <a href="https://github.com/louis-pvs/plaincraft/blob/main/ideas/PB-readme-narrative-migration.md" target="_blank" rel="noreferrer"><code>ideas/PB-readme-narrative-migration.md</code></a></li></ul>',10)])])}const m=a(s,[["render",i]]);export{h as __pageData,m as default};
