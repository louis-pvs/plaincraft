import{_ as e,c as a,o as i,af as o}from"./chunks/framework.4vjtQ5Ee.js";const u=JSON.parse('{"title":"Plaincraft Playbook","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md"}'),n={name:"index.md"};function r(s,t,l,c,p,d){return i(),a("div",null,[...t[0]||(t[0]=[o('<h1 id="plaincraft-playbook" tabindex="-1">Plaincraft Playbook <a class="header-anchor" href="#plaincraft-playbook" aria-label="Permalink to &quot;Plaincraft Playbook&quot;">​</a></h1><p>Welcome to the Plaincraft Playbook — a living collection of component patterns, architecture decisions, and best practices for building accessible, maintainable UI components.</p><h2 id="what-is-plaincraft" tabindex="-1">What is Plaincraft? <a class="header-anchor" href="#what-is-plaincraft" aria-label="Permalink to &quot;What is Plaincraft?&quot;">​</a></h2><p>Plaincraft is a library of self-contained, accessible React UI components (&quot;snippets&quot;) that follow SOLID principles and headless architecture patterns. Each component is designed to be:</p><ul><li><strong>Accessible</strong> — WCAG 2.1 AA compliant with proper ARIA, keyboard navigation, and focus management</li><li><strong>Headless</strong> — Business logic separated from presentation for maximum flexibility</li><li><strong>Type-safe</strong> — Full TypeScript support with strict types</li><li><strong>Tested</strong> — Unit tests, interaction tests, and accessibility tests included</li><li><strong>Well-documented</strong> — Comprehensive API docs, adoption guides, and Storybook examples</li></ul><h2 id="quick-links" tabindex="-1">Quick Links <a class="header-anchor" href="#quick-links" aria-label="Permalink to &quot;Quick Links&quot;">​</a></h2><ul><li><a href="/plaincraft/playbook/patterns/">Component Patterns</a> — Explore reusable component patterns</li><li><a href="/plaincraft/playbook/architecture.html">Architecture Guide</a> — Understand the headless architecture</li><li><a href="https://louis-pvs.github.io/plaincraft/storybook/" target="_blank" rel="noreferrer">Storybook</a> — Interactive component demos</li><li><a href="https://github.com/louis-pvs/plaincraft" target="_blank" rel="noreferrer">GitHub Repository</a> — Source code and contributions</li></ul><h2 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-label="Permalink to &quot;Getting Started&quot;">​</a></h2><p>Browse the <a href="/plaincraft/playbook/patterns/">Patterns</a> section to explore individual components, or read the <a href="/plaincraft/playbook/architecture.html">Architecture Guide</a> to understand the design principles behind Plaincraft.</p><p>Each pattern page includes:</p><ul><li><strong>Why it exists</strong> — The problem this component solves</li><li><strong>API documentation</strong> — Props, types, and usage examples</li><li><strong>Architecture overview</strong> — Controller hook, view components, and composition patterns</li><li><strong>Adoption guide</strong> — Step-by-step integration instructions</li><li><strong>Accessibility notes</strong> — ARIA patterns, keyboard interactions, and screen reader support</li></ul>',11)])])}const f=e(n,[["render",r]]);export{u as __pageData,f as default};
