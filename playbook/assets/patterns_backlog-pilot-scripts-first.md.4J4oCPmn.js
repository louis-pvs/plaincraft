import{_ as t,c as a,o,af as r}from"./chunks/framework.4vjtQ5Ee.js";const u=JSON.parse('{"title":"Backlog Pilot Scripts-First Ops","description":"","frontmatter":{},"headers":[],"relativePath":"patterns/backlog-pilot-scripts-first.md","filePath":"patterns/backlog-pilot-scripts-first.md"}'),i={name:"patterns/backlog-pilot-scripts-first.md"};function s(n,e,l,c,p,d){return o(),a("div",null,[...e[0]||(e[0]=[r('<h1 id="backlog-pilot-scripts-first-ops" tabindex="-1">Backlog Pilot Scripts-First Ops <a class="header-anchor" href="#backlog-pilot-scripts-first-ops" aria-label="Permalink to &quot;Backlog Pilot Scripts-First Ops&quot;">​</a></h1><ul><li><strong>Audience:</strong> Lane D backlog pilots stewarding the Plaincraft Roadmap</li><li><strong>Decision Anchor:</strong> <a href="https://github.com/louis-pvs/plaincraft/blob/main/ideas/ARCH-scripts-first-project-governance.md" target="_blank" rel="noreferrer">ARCH-scripts-first-project-governance</a></li><li><strong>Owner:</strong> @lane.d</li><li><strong>TTL:</strong> Review by 2026-04-30</li><li><strong>Future Metric:</strong> Weekly governance report delivered with ≤48 hour lag and zero duplicate project IDs</li><li><strong>Recorded Media:</strong> Record later</li></ul><h2 id="why-it-matters" tabindex="-1">Why it Matters <a class="header-anchor" href="#why-it-matters" aria-label="Permalink to &quot;Why it Matters&quot;">​</a></h2><p>Scripts-First only works when the backlog keeps Projects as the status source of truth. Lane D pilots watch for drift, unblock automation failures, and make sure Roadmap metadata mirrors idea files and branches. With a published playbook and a scheduled audit report, backlog pilots can resolve issues before they snowball into stale cards or missing owners.</p><h2 id="daily-intake-review" tabindex="-1">Daily Intake Review <a class="header-anchor" href="#daily-intake-review" aria-label="Permalink to &quot;Daily Intake Review&quot;">​</a></h2><ol><li>Run <code>pnpm scripts:lifecycle-smoke --yes --output json</code> on the current branch (or download the latest artifact from the <strong>Project &amp; Issue Management → Sync Project Fields</strong> workflow). For nightly verification, point the job at a sandbox clone: <code>pnpm scripts:lifecycle-smoke --execute --sandbox ../plaincraft-sandbox --output json</code>.</li><li>Confirm new tickets include <code>Lane</code>, <code>Priority</code>, and checklist metadata before approving automation bootstrap.</li><li>If <code>pnpm guardrails</code> fails because of missing owner/scaffold refs, bounce back to the lane owner with the <code>lifecycle-smoke-report.json</code> excerpt.</li><li>Add <code>blocked by</code> notes in the roadmap when automation fails so other lanes can see the hold.</li></ol><h2 id="weekly-audit-flow-cron-mondays-09-00-utc" tabindex="-1">Weekly Audit Flow (cron Mondays 09:00 UTC) <a class="header-anchor" href="#weekly-audit-flow-cron-mondays-09-00-utc" aria-label="Permalink to &quot;Weekly Audit Flow (cron Mondays 09:00 UTC)&quot;">​</a></h2><ol><li>Review the artifact from the <strong>Project Governance Audit</strong> workflow (GitHub → Actions → <code>project-governance-report</code>).</li><li>Cross-check the <code>statuses</code> list against <code>.repo/projects.json</code>. Missing statuses or lanes require a <code>pnpm gh:setup-project</code> run with updated templates.</li><li>Spot-check random items directly in the Roadmap for owner and priority alignment.</li><li>Update the audit log (see ADR below) with discrepancies and remediation actions. Include the latest <code>ops:report -- --yes</code> artifact so downstream lanes can reconcile schema changes quickly.</li></ol><h2 id="rollback-escalation" tabindex="-1">Rollback &amp; Escalation <a class="header-anchor" href="#rollback-escalation" aria-label="Permalink to &quot;Rollback &amp; Escalation&quot;">​</a></h2><ul><li><strong>Automation failure (scripts crash):</strong> capture the run ID, set Project status to <code>Pending-&lt;script&gt;</code>, and page Lane C with the guardrails output. Include the dry-run transcript plus the status note template below when re-running with <code>--yes</code>.</li><li><strong>Schema drift (missing field / option):</strong> re-run <code>pnpm gh:setup-project --yes</code> to reconcile fields, then rerun <code>pnpm ops:report --yes</code> to refresh the cache.</li><li><strong>Duplicate IDs:</strong> immediately archive the least active card using <code>pnpm ops:closeout --id &lt;ID&gt; --dry-run</code> to confirm impact, then delete manually if safe.</li><li><strong>Escalation path:</strong> Lane D → Lane C (script owners) → Lane A (API/pipeline) if GitHub permissions block action.</li></ul><h2 id="status-note-template" tabindex="-1">Status Note Template <a class="header-anchor" href="#status-note-template" aria-label="Permalink to &quot;Status Note Template&quot;">​</a></h2><p>Paste the following status note on the Project card whenever you move it with automation:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Automation: `{command}` (`--dry-run` attached)</span></span>\n<span class="line"><span>Project: `{from}` → `{to}`</span></span>\n<span class="line"><span>Idea: `{ideaPath}` (status now `{ideaStatus}`)</span></span>\n<span class="line"><span>PR: {prUrl}</span></span>\n<span class="line"><span>Next action: {nextStep or &quot;None&quot;}</span></span></code></pre></div><p>Replace <code>{command}</code> with the executed script (<code>pnpm ops:open-or-update-pr -- --id ARCH-123 --yes</code>, etc.) and attach the JSON transcript generated in dry-run. This keeps the backlog audit trail aligned with idea frontmatter and ensures future rotations can retrace the runbook.</p><h2 id="links" tabindex="-1">Links <a class="header-anchor" href="#links" aria-label="Permalink to &quot;Links&quot;">​</a></h2><ul><li>Template README: <a href="https://github.com/louis-pvs/plaincraft/blob/main/templates/roadmap-project/README.md" target="_blank" rel="noreferrer"><code>templates/roadmap-project/README.md</code></a></li><li>Template USAGE: <a href="https://github.com/louis-pvs/plaincraft/blob/main/templates/roadmap-project/USAGE.md" target="_blank" rel="noreferrer"><code>templates/roadmap-project/USAGE.md</code></a></li><li>Storybook View: <a href="https://louis-pvs.github.io/plaincraft/storybook/?path=/docs/governance-roadmap-onboarding--docs" target="_blank" rel="noreferrer"><code>Governance / Roadmap Onboarding</code></a></li><li>Lifecycle Governance Report: <a href="https://github.com/louis-pvs/plaincraft/blob/main/scripts/ops/report.mjs" target="_blank" rel="noreferrer"><code>pnpm ops:report</code></a></li><li>Weekly Audit Workflow: <a href="https://github.com/louis-pvs/plaincraft/blob/main/.github/workflows/project-audit.yml" target="_blank" rel="noreferrer"><code>.github/workflows/project-audit.yml</code></a></li><li>Project Sync Workflow: <a href="https://github.com/louis-pvs/plaincraft/blob/main/.github/workflows/project.yml" target="_blank" rel="noreferrer"><code>.github/workflows/project.yml</code></a></li><li>Schema Cache: <a href="https://github.com/louis-pvs/plaincraft/blob/main/.repo/projects.json" target="_blank" rel="noreferrer"><code>.repo/projects.json</code></a></li><li>Ideas Source: <a href="https://github.com/louis-pvs/plaincraft/blob/main/ideas/ARCH-scripts-first-project-governance.md" target="_blank" rel="noreferrer"><code>ideas/ARCH-scripts-first-project-governance.md</code></a></li></ul>',16)])])}const m=t(i,[["render",s]]);export{u as __pageData,m as default};
