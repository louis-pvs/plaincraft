import{_ as a,c as o,o as t,af as n}from"./chunks/framework.BkXTFsxB.js";const u=JSON.parse('{"title":"ADR 2025-10 Overarching Governance v2","description":"","frontmatter":{},"headers":[],"relativePath":"adr/2025-10-Overarching-v2.md","filePath":"adr/2025-10-Overarching-v2.md","lastUpdated":1762001301000}'),r={name:"adr/2025-10-Overarching-v2.md"};function i(c,e,d,s,l,h){return t(),o("div",null,[...e[0]||(e[0]=[n('<h1 id="adr-2025-10-overarching-governance-v2" tabindex="-1">ADR 2025-10 Overarching Governance v2 <a class="header-anchor" href="#adr-2025-10-overarching-governance-v2" aria-label="Permalink to &quot;ADR 2025-10 Overarching Governance v2&quot;">​</a></h1><h2 id="status" tabindex="-1">Status <a class="header-anchor" href="#status" aria-label="Permalink to &quot;Status&quot;">​</a></h2><p>Accepted — 2025-10-31</p><h2 id="context" tabindex="-1">Context <a class="header-anchor" href="#context" aria-label="Permalink to &quot;Context&quot;">​</a></h2><ul><li>Developer-facing guides in <code>/guides</code> had grown past governance limits and duplicated runnable steps that belong in templates.</li><li>Lane C needs thin, executable README contracts so automation can validate scaffold, test, and rollback flows.</li><li>Lane B stewards narrative “view/read” content that should live in Storybook docs and Playbook patterns instead of README prose.</li></ul><h2 id="decision" tabindex="-1">Decision <a class="header-anchor" href="#decision" aria-label="Permalink to &quot;Decision&quot;">​</a></h2><ol><li>Archive legacy <code>/guides</code> content under <code>guides/_archive/2025/11-guides-sunset/</code> and replace <code>guides/README.md</code> with a stub that points to template documentation and Lane B narratives.</li><li>Require every governed unit folder (<code>snippets/</code>, <code>scripts/</code>, future <code>components/</code> and <code>flows/</code>) to ship a README with the template-first headings, a <code>scaffold_ref</code>, and a single owner.</li><li>Add guardrail scripts (<code>readme-lint.mjs</code>, <code>template-coverage.mjs</code>, <code>view-dedupe.mjs</code>) plus workflow wiring to enforce template completeness, README coverage, and narrative deduplication.</li><li>Host long-form explanations in Storybook (<code>storybook/docs/*</code>) and Playbook (<code>playbook/patterns/*</code>), and link to them from the README “Links” section.</li></ol><h2 id="consequences" tabindex="-1">Consequences <a class="header-anchor" href="#consequences" aria-label="Permalink to &quot;Consequences&quot;">​</a></h2><ul><li>Developers land on runnable READMEs that stay under 400 words and trace back to versioned templates.</li><li>Storybook and Playbook now carry governance narratives (<code>Governance/Script Automation</code>, <code>Governance/Release Changelog</code>, <code>Governance/Ideas Pipeline</code>, <code>Governance/Roadmap Onboarding</code>) with matching Playbook patterns.</li><li>CI guardrails (<code>pnpm docs:lint</code>, <code>pnpm docs:views</code>) replace the retired guide ratio checks and fail fast on missing READMEs or duplicated step blocks.</li><li>Owners and scaffold references are tracked in every README so Lane C can audit coverage and Lane B knows who to pair with when narratives drift.</li></ul><h2 id="_2025-10-migration-retro" tabindex="-1">2025-10 Migration Retro <a class="header-anchor" href="#_2025-10-migration-retro" aria-label="Permalink to &quot;2025-10 Migration Retro&quot;">​</a></h2><ul><li>2025-10-31 — Locked the Plaincraft Roadmap schema to lifecycle v3 by caching field IDs in <code>.repo/projects.json</code>, wiring the <code>project-audit.yml</code> weekly workflow, and publishing <code>pnpm ops:report</code> for pilots to verify status drift.</li><li>2025-10-31 — Added the Backlog Pilot Scripts-First Ops playbook so Lane D can run intake reviews, escalate automation failures, and replay the weekly audit without ad-hoc Slack threads.</li></ul>',11)])])}const v=a(r,[["render",i]]);export{u as __pageData,v as default};
