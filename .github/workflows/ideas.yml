name: Ideas Management

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Action to perform"
        required: true
        type: choice
        options:
          - create-issues
          - validate-ideas
          - sync-checklists
      idea_file:
        description: "Specific idea file (e.g., U-bridge-intro.md) or leave blank for all"
        required: false

permissions:
  contents: read
  issues: write

jobs:
  ensure-project:
    name: Ensure Project Exists
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'create-issues'
    outputs:
      project_exists: ${{ steps.check.outputs.exists }}
      project_number: ${{ steps.check.outputs.number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check if project exists
        id: check
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -f .github/pipeline-config.json ]; then
            PROJECT_NUMBER=$(jq -r '.project.number // empty' .github/pipeline-config.json)
            
            if [ -n "$PROJECT_NUMBER" ]; then
              # Verify project still exists
              if gh project view $PROJECT_NUMBER --owner "${{ github.repository_owner }}" > /dev/null 2>&1; then
                echo "exists=true" >> "$GITHUB_OUTPUT"
                echo "number=$PROJECT_NUMBER" >> "$GITHUB_OUTPUT"
                echo "✅ Project #$PROJECT_NUMBER exists"
                exit 0
              fi
            fi
          fi

          echo "exists=false" >> "$GITHUB_OUTPUT"
          echo "number=" >> "$GITHUB_OUTPUT"
          echo "⚠️  No project configured or project missing"

      - name: Install GitHub CLI
        if: steps.check.outputs.exists == 'false'
        run: sudo apt-get update && sudo apt-get install -y gh

      - name: Setup pnpm
        if: steps.check.outputs.exists == 'false'
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        if: steps.check.outputs.exists == 'false'
        run: pnpm install --frozen-lockfile

      - name: Create project automatically
        if: steps.check.outputs.exists == 'false'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🔨 Creating Plaincraft Roadmap project..."
          pnpm gh:setup-labels -- --yes
          node scripts/ops/setup-project.mjs --project-name "Plaincraft Roadmap" --yes

          # Commit the config
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          if [ -f .github/pipeline-config.json ]; then
            git add .github/pipeline-config.json
            git diff --staged --quiet || git commit -m "chore: auto-create project config [skip ci]"
            git push
          fi

  create-issues-from-ideas:
    name: Create Issues from Ideas
    runs-on: ubuntu-latest
    needs: ensure-project
    if: |
      github.event.inputs.action == 'create-issues' &&
      (success() || failure())
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: main # Get latest after potential config commit

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install GitHub CLI
        run: sudo apt-get update && sudo apt-get install -y gh

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Create issues from idea files
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node scripts/ops/ideas-to-issues.mjs ${{ github.event.inputs.idea_file }}

      - name: Project info
        run: |
          echo "## Issues Created" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ "${{ needs.ensure-project.outputs.project_exists }}" == "true" ]; then
            echo "✅ Added to project #${{ needs.ensure-project.outputs.project_number }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "🆕 Created new Plaincraft Roadmap project" >> $GITHUB_STEP_SUMMARY
            echo "Check \`.github/pipeline-config.json\` for project number" >> $GITHUB_STEP_SUMMARY
          fi

  validate-ideas:
    name: Validate Ideas Structure
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'validate-ideas'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check ideas workspace
        id: workspace
        run: |
          if [ ! -d ideas ]; then
            echo "exists=false" >> "$GITHUB_OUTPUT"
            echo "has_files=false" >> "$GITHUB_OUTPUT"
          else
            count=$(find ideas -maxdepth 1 -type f -name "*.md" -not -name "_*" | wc -l | tr -d '[:space:]')
            echo "exists=true" >> "$GITHUB_OUTPUT"
            if [ "$count" -eq 0 ]; then
              echo "has_files=false" >> "$GITHUB_OUTPUT"
            else
              echo "has_files=true" >> "$GITHUB_OUTPUT"
            fi
          fi

      - name: Ideas workspace summary
        if: steps.workspace.outputs.has_files != 'true'
        run: |
          echo "## Ideas Workspace Check" >> "$GITHUB_STEP_SUMMARY"
          if [ "${{ steps.workspace.outputs.exists }}" != "true" ]; then
            echo "- ⚠️ \`/ideas\` directory missing." >> "$GITHUB_STEP_SUMMARY"
          else
            echo "- ⚠️ \`/ideas\` directory exists but no idea cards detected." >> "$GITHUB_STEP_SUMMARY"
          fi
          echo "- Run \`pnpm ideas:init --yes\` locally to scaffold starter templates." >> "$GITHUB_STEP_SUMMARY"

      - name: Setup Node.js
        if: steps.workspace.outputs.has_files == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        if: steps.workspace.outputs.has_files == 'true'
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        if: steps.workspace.outputs.has_files == 'true'
        run: pnpm install --frozen-lockfile

      - name: Validate idea files
        if: steps.workspace.outputs.has_files == 'true'
        run: |
          node scripts/checks/validate-ideas.mjs ${{ github.event.inputs.idea_file }}

      - name: Generate validation report
        if: steps.workspace.outputs.has_files == 'true' && always()
        run: |
          echo "## Ideas Validation Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          if [ -f /tmp/ideas-validation.json ]; then
            node -e "
              const fs = require('fs');
              const report = JSON.parse(fs.readFileSync('/tmp/ideas-validation.json', 'utf-8'));
              console.log(\`### Summary\`);
              console.log(\`- Total files: \${report.total}\`);
              console.log(\`- Valid: \${report.valid}\`);
              console.log(\`- Invalid: \${report.invalid}\`);
              console.log(\`\`);
              if (report.errors.length > 0) {
                console.log(\`### Errors\`);
                report.errors.forEach(err => console.log(\`- **\${err.file}**: \${err.message}\`));
              }
            " >> $GITHUB_STEP_SUMMARY
          fi

  sync-checklists:
    name: Sync Checklists with Issues
    runs-on: ubuntu-latest
    if: github.event.inputs.action == 'sync-checklists'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Sync checklists to issues
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node scripts/ops/sync-ideas-checklists.mjs ${{ github.event.inputs.idea_file }}

  auto-validate:
    name: Auto-validate on Push
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for idea file changes
        id: changes
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -q '^ideas/'; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Node.js
        if: steps.changes.outputs.changed == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        if: steps.changes.outputs.changed == 'true'
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        if: steps.changes.outputs.changed == 'true'
        run: pnpm install --frozen-lockfile

      - name: Validate changed idea files
        if: steps.changes.outputs.changed == 'true'
        run: |
          git diff --name-only HEAD~1 HEAD | \
            grep '^ideas/' | \
            xargs -I {} node scripts/checks/validate-ideas.mjs {}
