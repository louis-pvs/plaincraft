name: PR Requirements Check

on:
  pull_request:
    types: [opened, edited, synchronize, labeled, unlabeled]
  pull_request_review:
    types: [submitted]

permissions:
  contents: read
  pull-requests: write
  issues: read

jobs:
  check-requirements:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.11.0"

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Verify PR requirements
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          pnpm pr:verify -- ${{ github.event.pull_request.number }}

      - name: Check commits
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Verify all commits have tag prefix
          commits=$(gh pr view ${{ github.event.pull_request.number }} --json commits -q '.commits[].messageHeadline')

          missing_tags=0
          while IFS= read -r commit; do
            if ! echo "$commit" | grep -qE '^\[[\w-]+\]'; then
              echo "❌ Missing tag: $commit"
              missing_tags=$((missing_tags + 1))
            fi
          done <<< "$commits"

          if [ $missing_tags -gt 0 ]; then
            echo "❌ $missing_tags commit(s) missing tag prefix"
            exit 1
          fi

          echo "✅ All commits have tag prefix"

      - name: Comment on PR (failure)
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const message = `## ❌ PR Requirements Not Met

            This PR does not meet all requirements. Please ensure:

            - [ ] Issue reference present (\`Closes #123\`)
            - [ ] Lane label applied (\`lane:A\`, \`lane:B\`, \`lane:C\`, or \`lane:D\`)
            - [ ] All commits have tag prefix (\`[TAG-name]\`)
            - [ ] Acceptance checklist included

            See [PR template](.github/pull_request_template.md) for details.`;

            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message
            });
