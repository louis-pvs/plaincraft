name: ci

on:
  push:
    branches: ["main", "feat/aligned-lanes-v1"]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check:
    name: Typecheck, Lint & Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v6
        with:
          node-version-file: ".nvmrc"
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Format check
        run: pnpm format:check
      - name: Typecheck
        run: pnpm typecheck
      - name: Lint
        run: pnpm lint
      - name: Unit tests
        run: pnpm test -- --reporter=json --reporter=verbose --outputFile=test-results.json
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: test-results.json
          retention-days: 30

  build-storybook:
    name: Build Storybook Static
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v6
        with:
          node-version-file: ".nvmrc"
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build Storybook
        run: pnpm build:storybook
      - name: Upload Storybook build
        uses: actions/upload-artifact@v4
        with:
          name: storybook-static
          path: storybook-static
          retention-days: 7

  storybook-test:
    name: Storybook Interaction & A11y Tests
    runs-on: ubuntu-latest
    needs: build-storybook
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v6
        with:
          node-version-file: ".nvmrc"
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Determine Playwright version
        id: playwright-version
        run: |
          PLAYWRIGHT_VERSION=$(node -p "require('@playwright/test/package.json').version")
          echo "version=${PLAYWRIGHT_VERSION}" >> "$GITHUB_OUTPUT"
      - name: Configure Playwright cache path
        id: playwright-path
        run: |
          PLAYWRIGHT_CACHE="$HOME/.cache/ms-playwright"
          mkdir -p "$PLAYWRIGHT_CACHE"
          echo "PLAYWRIGHT_BROWSERS_PATH=$PLAYWRIGHT_CACHE" >> "$GITHUB_ENV"
          echo "path=$PLAYWRIGHT_CACHE" >> "$GITHUB_OUTPUT"
      - name: Restore Playwright browsers
        id: playwright-cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ steps.playwright-path.outputs.path }}
          key: playwright-browsers-${{ runner.os }}-${{ runner.arch }}-${{ steps.playwright-version.outputs.version }}
          restore-keys: |
            playwright-browsers-${{ runner.os }}-${{ runner.arch }}-
            playwright-browsers-${{ runner.os }}-
      - name: Download Storybook build
        uses: actions/download-artifact@v4
        with:
          name: storybook-static
          path: storybook-static
      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm exec playwright install --with-deps
      - name: Run Storybook tests
        run: pnpm storybook:test:json
      - name: Upload Storybook test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: storybook-test-results
          path: storybook-test-results.json
          retention-days: 30
      - name: Save Playwright browsers
        if: ${{ always() && steps.playwright-cache.outputs.cache-hit != 'true' }}
        uses: actions/cache/save@v4
        with:
          path: ${{ steps.playwright-path.outputs.path }}
          key: playwright-browsers-${{ runner.os }}-${{ runner.arch }}-${{ steps.playwright-version.outputs.version }}

  build-demo:
    name: Build Demo Site
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v6
        with:
          node-version-file: ".nvmrc"
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build demo
        run: pnpm build
      - name: Upload demo build
        uses: actions/upload-artifact@v4
        with:
          name: demo-dist
          path: dist
          retention-days: 7

  summary:
    name: PR Summary
    runs-on: ubuntu-latest
    needs: [check, storybook-test, build-storybook, build-demo]
    if: always()
    steps:
      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          pattern: "*-test-results"
          path: results
          merge-multiple: true
        continue-on-error: true
      - name: Generate summary
        run: |
          echo "## CI Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Typecheck, Lint & Unit Tests | ${{ needs.check.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Storybook Tests | ${{ needs.storybook-test.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Build Storybook | ${{ needs.build-storybook.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Build Demo | ${{ needs.build-demo.result == 'success' && '✅' || '❌' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f "results/test-results.json" ]; then
            echo "### Test Details" >> $GITHUB_STEP_SUMMARY
            echo "Unit test results uploaded as artifacts." >> $GITHUB_STEP_SUMMARY
          fi
