name: Project & Issue Management

on:
  issues:
    types: [opened, labeled]
  workflow_dispatch:
    inputs:
      action:
        description: "Action to perform"
        required: true
        type: choice
        options:
          - setup-project
          - tag-issues
          - sync-project
      project_name:
        description: "Project name (for setup-project)"
        required: false
        default: "Plaincraft Roadmap"
      version:
        description: "Version to tag issues from (for tag-issues)"
        required: false

permissions:
  issues: write
  contents: write

jobs:
  auto-tag-issue:
    name: Auto-tag Issue
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && github.event.action == 'opened'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Auto-detect and apply labels
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ISSUE_NUMBER=${{ github.event.issue.number }}
          ISSUE_TITLE="${{ github.event.issue.title }}"
          ISSUE_BODY="${{ github.event.issue.body }}"

          # Detect lane from title prefix
          LANE=""
          if [[ "$ISSUE_TITLE" =~ ^\[U- ]]; then
            LANE="lane:A"
          elif [[ "$ISSUE_TITLE" =~ ^\[C- ]]; then
            LANE="lane:A"
          elif [[ "$ISSUE_TITLE" =~ ^\[B- ]]; then
            LANE="lane:B"
          elif [[ "$ISSUE_TITLE" =~ ^\[ARCH- ]]; then
            LANE="lane:C"
          elif [[ "$ISSUE_TITLE" =~ ^\[PB- ]]; then
            LANE="lane:D"
          elif [[ "$ISSUE_TITLE" =~ ^\[D- ]]; then
            LANE="lane:D"
          fi

          # Detect type from title
          TYPE=""
          if [[ "$ISSUE_TITLE" =~ ^\[U- ]]; then
            TYPE="type:unit"
          elif [[ "$ISSUE_TITLE" =~ ^\[C- ]]; then
            TYPE="type:composition"
          elif [[ "$ISSUE_TITLE" =~ ^\[B- ]] || [[ "$ISSUE_TITLE" =~ [Bb]ug ]]; then
            TYPE="type:bug"
          elif [[ "$ISSUE_TITLE" =~ ^\[ARCH- ]]; then
            TYPE="type:architecture"
          fi

          # Apply labels if detected
          LABELS=""
          if [ -n "$LANE" ]; then
            LABELS="$LANE"
          fi
          if [ -n "$TYPE" ]; then
            LABELS="$LABELS,$TYPE"
          fi

          if [ -n "$LABELS" ]; then
            echo "Applying labels: $LABELS"
            gh issue edit $ISSUE_NUMBER --add-label "$LABELS"
          else
            echo "No lane/type detected from title"
          fi

  add-to-project:
    name: Add Issue to Project
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && (github.event.action == 'opened' || github.event.action == 'labeled')
    needs: [auto-tag-issue]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Add to project
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Read project config
          if [ -f .github/pipeline-config.json ]; then
            PROJECT_NUMBER=$(jq -r '.project.number // empty' .github/pipeline-config.json)
            
            if [ -n "$PROJECT_NUMBER" ]; then
              echo "Adding issue to project #$PROJECT_NUMBER"
              gh issue edit ${{ github.event.issue.number }} \
                --add-project "$PROJECT_NUMBER" || echo "Failed to add to project (may already be added)"
            else
              echo "No project number in pipeline-config.json"
            fi
          else
            echo "No pipeline-config.json found"
          fi

  setup-project:
    name: Setup GitHub Project
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'setup-project'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Setup labels
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm gh:setup-labels

      - name: Create project
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PROJECT_NAME="${{ github.event.inputs.project_name }}"
          node scripts/ops/setup-project.mjs --project-name "$PROJECT_NAME"

      - name: Commit config updates
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          if [ -f .github/pipeline-config.json ]; then
            git add .github/pipeline-config.json
            git diff --staged --quiet || git commit -m "chore: update project config [skip ci]"
            git push
          fi

  tag-issues:
    name: Create Issues from Changelog
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'tag-issues'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.0.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Create issues from changelog
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            pnpm issues:create -- --version "${{ github.event.inputs.version }}"
          else
            pnpm issues:create
          fi

  sync-project:
    name: Sync Project Fields
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'sync-project'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run lifecycle smoke checks
        run: |
          set -euo pipefail
          pnpm scripts:lifecycle-smoke --yes --output json | tee lifecycle-smoke-report.json

      - name: Upload lifecycle report
        uses: actions/upload-artifact@v4
        with:
          name: lifecycle-smoke-report
          path: lifecycle-smoke-report.json
          retention-days: 14
