name: Idea Lifecycle Management

on:
  issues:
    types: [closed]

permissions:
  contents: write
  issues: read
  pull-requests: read

jobs:
  archive-idea:
    name: Archive Idea File
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Archive idea file for closed issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_STATE_REASON: ${{ github.event.issue.state_reason }}
        run: |
          echo "📝 Processing closed issue #${ISSUE_NUMBER}: ${ISSUE_TITLE}"
          
          # Safety check: Skip if issue has "keep-idea" label
          if gh issue view ${ISSUE_NUMBER} --json labels --jq '.labels[].name' | grep -q "keep-idea"; then
            echo "⏭️  Issue has 'keep-idea' label - skipping archive"
            exit 0
          fi
          
          # Safety check: Only process issues closed as "completed" (merged PRs)
          if [ "${ISSUE_STATE_REASON}" != "completed" ]; then
            echo "⏭️  Issue not closed as completed (state: ${ISSUE_STATE_REASON}) - skipping archive"
            exit 0
          fi
          
          # Safety check: Check if issue was open for at least 1 hour (not just created/closed immediately)
          CREATED_AT=$(gh issue view ${ISSUE_NUMBER} --json createdAt --jq '.createdAt')
          CLOSED_AT=$(gh issue view ${ISSUE_NUMBER} --json closedAt --jq '.closedAt')
          
          CREATED_EPOCH=$(date -d "${CREATED_AT}" +%s)
          CLOSED_EPOCH=$(date -d "${CLOSED_AT}" +%s)
          DURATION=$((CLOSED_EPOCH - CREATED_EPOCH))
          
          if [ ${DURATION} -lt 3600 ]; then
            echo "⏭️  Issue was open for less than 1 hour - skipping archive"
            exit 0
          fi
          
          # Find corresponding idea file
          # Strategy 1: Check if issue body has "Source: /ideas/..." link
          SOURCE_FILE=$(gh issue view ${ISSUE_NUMBER} --json body --jq '.body' | grep -oP 'Source:\s*`/ideas/\K[^`]+' || echo "")
          
          if [ -n "${SOURCE_FILE}" ] && [ -f "ideas/${SOURCE_FILE}" ]; then
            IDEA_FILE="ideas/${SOURCE_FILE}"
            echo "✓ Found idea file via source link: ${IDEA_FILE}"
          else
            # Strategy 2: Try to match issue title to idea file name
            # Convert title to potential filename (lowercase, replace spaces with hyphens)
            POTENTIAL_FILE=$(echo "${ISSUE_TITLE}" | tr '[:upper:]' '[:lower:]' | tr ' ' '-' | sed 's/[^a-z0-9-]//g')
            
            # Try different prefixes
            for PREFIX in "U-" "C-" "B-" "ARCH-" "PB-" ""; do
              if [ -f "ideas/${PREFIX}${POTENTIAL_FILE}.md" ]; then
                IDEA_FILE="ideas/${PREFIX}${POTENTIAL_FILE}.md"
                echo "✓ Found idea file via title match: ${IDEA_FILE}"
                break
              fi
            done
          fi
          
          if [ -z "${IDEA_FILE}" ] || [ ! -f "${IDEA_FILE}" ]; then
            echo "ℹ️  No idea file found for issue #${ISSUE_NUMBER} - nothing to archive"
            exit 0
          fi
          
          # Create archive directory (by year)
          YEAR=$(date +%Y)
          ARCHIVE_DIR="ideas/_archive/${YEAR}"
          mkdir -p "${ARCHIVE_DIR}"
          
          # Move file to archive
          FILENAME=$(basename "${IDEA_FILE}")
          ARCHIVE_PATH="${ARCHIVE_DIR}/${FILENAME}"
          
          mv "${IDEA_FILE}" "${ARCHIVE_PATH}"
          echo "✓ Moved ${IDEA_FILE} to ${ARCHIVE_PATH}"
          
          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Commit the archive
          git add "${ARCHIVE_PATH}" "${IDEA_FILE}" 2>/dev/null || true
          git commit -m "chore: archive idea for closed issue #${ISSUE_NUMBER} [skip ci]

Archived: ${FILENAME}
Issue: #${ISSUE_NUMBER} - ${ISSUE_TITLE}
Reason: ${ISSUE_STATE_REASON}
Archive: ${ARCHIVE_PATH}"
          
          # Push changes
          git push origin main
          
          echo "✅ Successfully archived idea file for issue #${ISSUE_NUMBER}"
